{% set project = env['project'] %}
{% set deployment = env['deployment'] %}
{% set zone = properties['zone'] %}
{% set region = zone[:-2] %}
{% set machineType = properties['dataNodeMachineType'] %}
{% set diskType = properties['dataNodeDiskType'] %}
{% set diskSize = properties['dataNodeDiskSizeGb'] %}
{% set licenseKey = properties['licenseKey'] %}
{% set sourceImage = properties['sourceImage'] %}
{% set network = properties['network'] %}

resources:
# Instance template for data nodes
# Used by the data node instance group manager
- name: {{ deployment }}-data-node-it
  type: compute.v1.instanceTemplate
  properties:
    zone: {{ zone }}
    properties:
      machineType: {{ machineType }}
      networkInterfaces:
        - network: https://www.googleapis.com/compute/v1/projects/{{ project }}/global/networks/{{ network }}
          accessConfigs:
          - name: External NAT
            type: ONE_TO_ONE_NAT
      disks:
      - deviceName: boot
        type: PERSISTENT
        boot: True
        autoDelete: False
        initializeParams:
          sourceImage: {{ sourceImage }}
          diskType: pd-standard
          diskSizeGb: 10
      - deviceName: influxdb
        type: PERSISTENT
        autoDelete: False
        initializeParams:
          diskType: {{ diskType }}
          diskSizeGb: {{ diskSize }}
      metadata:
        items:
        - key: deployment
          value: {{ deployment }}
        - key: license-key
          value: {{ licenseKey }}
        - key: rtc-name
          value: {{ deployment }}-rtc
        - key: startup-script
          value: |
            #!/bin/bash
            set -euxo pipefail
            {% for script in properties['startupScripts'] %}
            {{ imports[script]|indent(12) }}
            {% endfor %}
      tags:
        items:
          - {{ deployment }}-data-node-fw
      serviceAccounts:
        - email: default
          scopes:
            - 'https://www.googleapis.com/auth/cloud-platform'
            - 'https://www.googleapis.com/auth/cloud.useraccounts.readonly'
            - 'https://www.googleapis.com/auth/devstorage.read_only'
            - 'https://www.googleapis.com/auth/logging.write'
            - 'https://www.googleapis.com/auth/monitoring.write'
            - 'https://www.googleapis.com/auth/cloudruntimeconfig'

- name: {{ deployment }}-data-node-igm
  type: compute.v1.instanceGroupManager
  properties:
    baseInstanceName: {{ deployment }}-data-node-vm
    instanceTemplate: $(ref.{{ deployment }}-data-node-it.selfLink)
    targetSize: 2
    zone: {{ zone }}
    namedPorts:
      - name: 'tcp'
        port: 8086

- name: {{ deployment }}-data-node-backend
  type: compute.v1.regionBackendService
  properties:
    region: {{ region }}
    loadBalancingScheme: INTERNAL
    sessionAffinity: NONE
    healthChecks: [ $(ref.{{ deployment }}-data-node-health.selfLink) ]
    backends:
      - balacingMode: RATE
        group: $(ref.{{ deployment }}-data-node-igm.instanceGroup)

- name: {{ deployment }}-data-node-fr
  type: compute.v1.forwardingRule
  properties:
    region: {{ region }}
    IPProtocol: TCP
    ports:
    - '8086'
    loadBalancingScheme: INTERNAL
    backendService: $(ref.{{ deployment }}-data-node-backend.selfLink)

# content HTTP Health Check
- name: {{ deployment }}-data-node-health
  type: compute.v1.healthCheck
  properties:
    type: TCP
    checkIntervalSec: 10
    timeoutSec: 10
    unhealthyThreshold: 2
    tcpHealthCheck:
      port: 8086
      portName: tcp

- name: {{ deployment }}-data-node-fw
  type: compute.v1.firewall
  properties:
    network: https://www.googleapis.com/compute/v1/projects/{{ project }}/global/networks/{{ network }}
    sourceRanges: ["0.0.0.0/0"]
    targetTags: ["{{ deployment }}-data-node-fw"]
    allowed:
      - IPProtocol: TCP
        ports: ["8086"]

outputs:
- name: connectionIP
  value: $(ref.{{ deployment }}-data-node-fr.IPAddress)
- name: group
  value: $(ref.{{ deployment }}-data-node-igm.instanceGroup)